--- ppp.orig/pppd/auth.c	2011-08-17 11:15:17.000000000 +0000
+++ ppp/pppd/auth.c	2012-03-13 17:04:32.710036000 +0000
@@ -640,7 +640,7 @@ link_terminated(unit)
      * we delete its pid file.
      */
     if (!doing_multilink && !demand)
-	remove_pidfiles();
+	remove_pidfiles(1);
 
     /*
      * If we may want to bring the link up again, transfer
--- ppp.orig/pppd/main.c	2012-03-09 17:15:24.000000000 +0000
+++ ppp/pppd/main.c	2012-03-13 17:04:32.710036000 +0000
@@ -854,11 +854,14 @@ create_linkpidfile(pid)
 /*
  * remove_pidfile - remove our pid files
  */
-void remove_pidfiles()
+void remove_pidfiles(keep_linkpid)
+    int keep_linkpid;
 {
     if (pidfilename[0] != 0 && unlink(pidfilename) < 0 && errno != ENOENT)
 	warn("unable to delete pid file %s: %m", pidfilename);
     pidfilename[0] = 0;
+    if (keep_linkpid)
+	return;
     if (linkpidfile[0] != 0 && unlink(linkpidfile) < 0 && errno != ENOENT)
 	warn("unable to delete pid file %s: %m", linkpidfile);
     linkpidfile[0] = 0;
@@ -1226,7 +1229,7 @@ cleanup()
 	the_channel->disestablish_ppp(devfd);
     if (the_channel->cleanup)
 	(*the_channel->cleanup)();
-    remove_pidfiles();
+    remove_pidfiles(0);
 
 #ifdef USE_TDB
     if (pppdb != NULL)
--- ppp.orig/pppd/multilink.c	2009-11-16 22:26:07.000000000 +0000
+++ ppp/pppd/multilink.c	2012-03-13 17:04:32.710036000 +0000
@@ -267,7 +267,7 @@ void mp_bundle_terminated()
 	notice("Connection terminated.");
 	print_link_stats();
 	if (!demand) {
-		remove_pidfiles();
+		remove_pidfiles(1);
 		script_unsetenv("IFNAME");
 	}
 
--- ppp.orig/pppd/pppd.h	2012-03-09 17:15:24.000000000 +0000
+++ ppp/pppd/pppd.h	2012-03-13 17:04:32.730036000 +0000
@@ -496,7 +496,7 @@ void notify __P((struct notifier *, int)
 int  ppp_send_config __P((int, int, u_int32_t, int, int));
 int  ppp_recv_config __P((int, int, u_int32_t, int, int));
 const char *protocol_name __P((int));
-void remove_pidfiles __P((void));
+void remove_pidfiles __P((int));
 void lock_db __P((void));
 void unlock_db __P((void));
 
